//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebDownloader.ClientSessions.CachingServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadStatus", Namespace="http://schemas.datacontract.org/2004/07/PhillipScottGivens.WebDownloader.Data")]
    public enum DownloadStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Requested = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Downloading = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Downloaded = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Errored = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CachingServiceReference.ICachingService")]
    public interface ICachingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICachingService/StartDownload", ReplyAction="http://tempuri.org/ICachingService/StartDownloadResponse")]
        int StartDownload(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICachingService/StartDownload", ReplyAction="http://tempuri.org/ICachingService/StartDownloadResponse")]
        System.Threading.Tasks.Task<int> StartDownloadAsync(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICachingService/GetDownloadStatus", ReplyAction="http://tempuri.org/ICachingService/GetDownloadStatusResponse")]
        WebDownloader.ClientSessions.CachingServiceReference.DownloadStatus GetDownloadStatus(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICachingService/GetDownloadStatus", ReplyAction="http://tempuri.org/ICachingService/GetDownloadStatusResponse")]
        System.Threading.Tasks.Task<WebDownloader.ClientSessions.CachingServiceReference.DownloadStatus> GetDownloadStatusAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICachingService/GetDownloadedHtml", ReplyAction="http://tempuri.org/ICachingService/GetDownloadedHtmlResponse")]
        string GetDownloadedHtml(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICachingService/GetDownloadedHtml", ReplyAction="http://tempuri.org/ICachingService/GetDownloadedHtmlResponse")]
        System.Threading.Tasks.Task<string> GetDownloadedHtmlAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICachingServiceChannel : WebDownloader.ClientSessions.CachingServiceReference.ICachingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CachingServiceClient : System.ServiceModel.ClientBase<WebDownloader.ClientSessions.CachingServiceReference.ICachingService>, WebDownloader.ClientSessions.CachingServiceReference.ICachingService {
        
        public CachingServiceClient() {
        }
        
        public CachingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CachingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CachingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CachingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int StartDownload(string address) {
            return base.Channel.StartDownload(address);
        }
        
        public System.Threading.Tasks.Task<int> StartDownloadAsync(string address) {
            return base.Channel.StartDownloadAsync(address);
        }
        
        public WebDownloader.ClientSessions.CachingServiceReference.DownloadStatus GetDownloadStatus(int id) {
            return base.Channel.GetDownloadStatus(id);
        }
        
        public System.Threading.Tasks.Task<WebDownloader.ClientSessions.CachingServiceReference.DownloadStatus> GetDownloadStatusAsync(int id) {
            return base.Channel.GetDownloadStatusAsync(id);
        }
        
        public string GetDownloadedHtml(int id) {
            return base.Channel.GetDownloadedHtml(id);
        }
        
        public System.Threading.Tasks.Task<string> GetDownloadedHtmlAsync(int id) {
            return base.Channel.GetDownloadedHtmlAsync(id);
        }
    }
}
